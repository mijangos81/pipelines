#!/bin/bash

#Run two 8 CPU splitting tasks per 16 CPU node.
#Note that the value of '8' within the parallel code cannot be parsed as a variable so if this 
#script is reconfigured to run on nodes with different numbers of CPUs, it will need to be 
#manually adjusted.  

#PBS -l wd
#PBS -P mo73 
#PBS -N split_fastq
#PBS -l walltime=2:00:00,mem=8Gb,ncpus=8,jobfs=4Gb
#PBS -W umask=022
#PBS -M jose.mijangosaraujo@sydney.edu.au
#PBS -m abe
#PBS -q normal

#module load parallel/20191022
/home/549/jm9807/split_fastq.sh 

#SCRIPT= /home/549/jm9807/split_fastq.sh   #Script to run
#INPUTS= /home/549/jm9807/split_fastq.input   #Each line in this file is used as arguments to ${SCRIPT}

#NCPUS=4 #cpus per task. Manually change as required, at this variable and also in the parallel command below
#sed -i "s/$/,$NCPUS/" $INPUTS #Update the inputs file to include the cpus per task (so the sh script does not have to be manually edited)

#parallel -j $((${PBS_NCPUS}/${NCPUS})) --rpl '{%} 1 $_=($job->slot()-1)'"*${NCPUS}" pbsdsh -n {%}  -- bash -l -c "'${SCRIPT} {}'" :::: $#{INPUTS}
